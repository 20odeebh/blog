let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_0b0‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_0b0‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_0b0‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_0b0‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_0b0‍.w("./api",[["default",["api"],function(v){api=v}]]);_0b0‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();




//비구조화 할당을 통해 process.env 내부 값에 대한 래퍼런스 만들기




const { PORT, MONGO_URI } = process.env;
mongoose
  .connect(MONGO_URI, { useNewUrlParser: true, useFindAndModify: false })
  .then(() => {
    console.log('connected to mongodb');
  })
  .catch((e) => {
    _0b0‍.g.console.error(e);
  });
const app = new Koa();
const router = new Router();
router.use('/api', api.routes());
//라우터 적용 전에 bodyParser 적용
app.use(bodyParser());
//app 인스턴스에 라우터 적용
app.use(jwtMiddleware);
app.use(router.routes()).use(router.allowedMethods());
//포트가 지정되어 있지 않으면 4000 사용
const port = PORT || 4000;
app.listen(port, () => {
  _0b0‍.g.console.log('Listening to port %d', port);
});
